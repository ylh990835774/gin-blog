basePath: '{{.BasePath}}'
definitions:
  models.Article:
    properties:
      content:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      desc:
        type: string
      id:
        type: integer
      modified_by:
        type: string
      modified_on:
        type: integer
      state:
        type: integer
      tag:
        $ref: '#/definitions/models.Tag'
        description: |-
          Tag字段，实际是一个嵌套的struct，它利用 TagID 与Tag模型相互关联，在执行查询的时候，能够达到Article、Tag关联查询的功能
          可以通过Related进行关联查
        type: object
      tag_id:
        description: |-
          gorm:index，用于声明这个字段为索引，如果你使用了自动迁移功能则会有所影响，在不使用则无影响
          Article 有一个结构体成员是 TagID，就是外键。gorm 会通过类名+ID的方式去找到这两个类之间的关联关系
        type: integer
      title:
        type: string
    type: object
  models.Tag:
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      id:
        type: integer
      modified_by:
        type: string
      modified_on:
        type: integer
      name:
        type: string
      state:
        type: integer
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: '{{.Description}}'
  license: {}
  title: '{{.Title}}'
  version: '{{.Version}}'
paths:
  /api/v1/articles:
    get:
      parameters:
      - description: TagId
        in: query
        name: tag_id
        type: integer
      - description: State
        enum:
        - 1
        - 0
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        required: true
        type: "false"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
            type: object
      summary: 获取多个文章
    post:
      parameters:
      - description: TagID
        in: query
        name: tag_id
        required: true
        type: integer
      - description: Title
        in: query
        name: title
        required: true
        type: string
      - description: Desc
        in: query
        name: desc
        required: true
        type: string
      - description: Content
        in: query
        name: content
        required: true
        type: string
      - description: CreatedBy
        in: query
        name: created_by
        required: true
        type: string
      - description: State
        enum:
        - 1
        - 0
        in: query
        name: state
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 新增文章
  /api/v1/articles/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 删除文章
    get:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
            type: object
      summary: 获取单个文章
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: TagID
        in: query
        name: tag_id
        type: string
      - description: Title
        in: query
        name: title
        type: string
      - description: Desc
        in: query
        name: desc
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - description: ModifiedBy
        in: query
        name: modified_by
        required: true
        type: string
      - description: State
        enum:
        - 1
        - 0
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 修改文章
  /api/v1/tags:
    get:
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: State
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/json'
            type: object
      summary: 获取多个文章的标签
    post:
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: CreatedBy
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 新增文章标签
  /api/v1/tags/{id}:
    delete:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/json'
            type: object
      summary: 删除文章标签
    put:
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ID
        in: query
        name: name
        required: true
        type: string
      - description: State
        in: query
        name: state
        type: integer
      - description: ModifiedBy
        in: query
        name: modified_by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 修改文章标签
  /auth:
    get:
      parameters:
      - description: userName
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":"TOKEN INFO","msg":"ok"}'
          schema:
            type: string
      summary: Get Auth
swagger: "2.0"
